# spring.config.import=optional:configserver:${CONFIG_SERVER:http://localhost:8888}
server.port=${SERVER_PORT:8040}

# datasource properties
spring.datasource.url=jdbc:postgresql:${DATABASE_URL://localhost:5431/user_service}?characterEncoding=UTF-8
spring.datasource.username=${DATABASE_USERNAME:user_service}
spring.datasource.password=${DATABASE_PASSWORD:user_service_password}
spring.jpa.database=postgresql
spring.h2.console.enabled=true
spring.jpa.hibernate.ddl-auto=validate

# datasource maximum pool size
spring.datasource.hikari.maximum-pool-size=5
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# for swagger
springdoc.show-actuator=true
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/api-docs

# kafka properties
spring.kafka.bootstrap-servers=${KAFKA_URL:localhost:29092}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=userDTO:com.chatapp.usermanagement.web.dto.UserDTO
spring.kafka.topic.name=user-management-topic

# feign properties
security-service.name=security-service
security-service.url=${SECURITY_SERVICE_URL:http://localhost:8000}
