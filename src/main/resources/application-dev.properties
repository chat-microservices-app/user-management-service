spring.config.import=optional:configserver:http://localhost:8888
server.port=8040

##log security events
#logging.level.org.springframework.security=trace
#logging.level.com.chatapp.usermanagement=debug
#logging.level.org.hibernate.stat=debug
#
#
## defer the h2 database from initializing until before spring data jpa is initialized
#spring.jpa.defer-datasource-initialization=true
#
#
#
## register with eureka
#eureka.client.fetch-registry=true
#eureka.client.register-with-eureka=true
#eureka.client.service-url.default-zone=http://localhost:8761/eureka/
#eureka.client.healthcheck.enabled=true
#
#eureka.instance.lease-expiration-duration-in-seconds=75
#eureka.instance.lease-renewal-interval-in-seconds=60
#eureka.instance.prefer-ip-address=true
#
## datasource properties
#spring.datasource.url=jdbc:postgresql://localhost:5431/user_service?characterEncoding=UTF-8
#spring.datasource.username=user_service
#spring.datasource.password=user_service_password
#spring.jpa.database=postgresql
#spring.h2.console.enabled=true
#spring.jpa.hibernate.ddl-auto=update
## datasource maximum pool size
#spring.datasource.hikari.maximum-pool-size=5
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
#
## for swagger
#springdoc.show-actuator=true
#springdoc.swagger-ui.path=/swagger-ui.html
#springdoc.api-docs.path=/api-docs
#
## kafka properties
#spring.kafka.producer.bootstrap-servers=localhost:29092
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
#spring.kafka.producer.properties.spring.json.type.mapping=userDTO:com.chatapp.usermanagement.web.dto.UserDTO
#spring.kafka.topic.name=user-management-topic
